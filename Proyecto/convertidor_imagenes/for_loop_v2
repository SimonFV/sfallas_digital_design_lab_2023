			;		Tarea 2 - Codigo fuente
			;		Taller de Diseño Digital
			;		Grupo 08
			
			
			
			;		llena el array con los valores iniciales [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]
			
			MOV		R0, #0 				; index
			MOV		R1, #0x00010000 		; direccion base memoria (inicio del array)
writeloop
			CMP		R0, #9				; compara si el index es mayor a 9
			BGT		endwriteloop			; si es mayor que nueve termina el loop
			LSL		R2, R0, #2 			; shift left 2, para multiplicar el index por 4(este es el offset de cada word del array)
			ADD		R3, R3, #2			; asigna en R3 el valor que se quiere guardar en esta posicion del array
			STR		R3, [R1, R2]			; escribe el valor de R3 en la direccion R1(base) + R2(index*4)
			ADD		R0, R0, #1			; se incrementa el index en 1
			B		writeloop				; se regresa a writeloop para la siguiente iteracion
endwriteloop
			
			
			
			;		loop que recorre y modifica el array, dividiendo cada valor por 2
			
			MOV		R0, #0 				; reset del index
forloop
			CMP		R0, #9				; compara si el index es mayor a 9
			BGT		endforloop			; si es mayor que nueve termina el loop
			LSL		R2, R0, #2 			; shift left 2, para multiplicar el index por 4(este es el offset de cada word del array)
			LDR		R3, [R1, R2]			; almacena en R3 el valor que esta en memoria en la direccion R1(base) + R2(index*4)
			LSR		R3, R3, #1			; shift right 1, para dividir el valor en R3 por 2
			STR		R3, [R1, R2]			; escribe el valor de R3 en la direccion R1(base) + R2(index*4)
			ADD		R0, R0, #1			; se incrementa el index en 1
			B		forloop				; se regresa a forloop para la siguiente iteracion
endforloop
